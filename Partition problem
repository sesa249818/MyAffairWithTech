func partition(nums []int)bool{\
	sum:=0
	n:=len(sym)
   if len ==0 {
   return false
   }
  
  //find tootal sum of the set
	for i:=0;i< n;i++{
		sum+=nums[i]
	}
  
	if sum %2 !=0{
		return false
	}
	target:=sum/2
  
	//Find set whose sume is sum/2
	return isSubsetSum(nums,n,target)
}
func isSubsetSum(nums []int, n int,target int)bool{
	if n==0 && target !=0{
		return false
	}
	if target == 0{ 
		return true
	}
	if nums[n-1] > target {
		return isSubsetSum(nums,n-1,target)
	}
	//compute by taking nth elment or skipping
	return isSubsetSum(nums,n-1,target-nums[n-1]) ||
		   subArrisSubsetSumayWithSumTarget(nums,n-1,target)
}
